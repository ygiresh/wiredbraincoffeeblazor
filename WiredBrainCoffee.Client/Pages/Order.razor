@page "/Order"
@using WiredBrainCoffee.Models
<div class="container">
    <div class="order-page">
        <Row>
            <Column ColumnSize="ColumnSize.Is12">
                <br />
                <h2>New Order</h2>
                <p>Coffee, comfort food, great prices - we have it all.</p>
                <hr />
            </Column>
        </Row>
        <Row>
            <Column ColumnSize="ColumnSize.Is8">
                <Tabs SelectedTab="@selectedTab" SelectedTabChanged="@OnSelectedTabChanged">
                    <Items>
                        <Tab Name="coffee">Coffee</Tab>
                        <Tab Name="food">Food</Tab>
                    </Items>
                    <Content>
                        <TabPanel Name="coffee">
                            Content for home.
                        </TabPanel>
                        <TabPanel Name="food">
                            @foreach (var item in MenuItems)
                            {
                                <div class="menu-item">
                                    <div class="menu-item-image">
                                        <img src="@item.ImageFile" />
                                    </div>
                                    <div class="menu-item-info">
                                        <p class="menu-item-title">@item.Name</p>
                                        <p class="menu-item-summary">@item.Summary</p>
                                        <div class="menu-item-actions">
                                            <span class="menu-item-price">Price: @item.Price.ToString("C")</span>
                                            <Button @onclick="(e => AddToOrder(item))" Color="Color.Info">Add to Order</Button>
                                        </div>
                                    </div>
                                </div>
                            }
                        </TabPanel>
                    </Content>
                </Tabs>


            </Column>
            <Column ColumnSize="ColumnSize.Is4">
                <div class="order-info">
                    <h3>Your Current Order:</h3>
                    <ul class="current-order-list">
                        @foreach (var item in CurrentOrder)
                        {
                            <li><span>@item.Name</span><span>@item.Price.ToString("C")</span></li>
                        }
                    </ul>
                    <p><span>Your Total:</span><span>@OrderTotal.ToString("C")</span></p>
                    <hr />
                    <Button Color="Color.Success">Checkout</Button>
                </div>
            </Column>
        </Row>
    </div>
</div>
@code {
    string selectedTab = "food";

    private void OnSelectedTabChanged(string name)
    {
        selectedTab = name;
    }

    public decimal OrderTotal = 0;

    List<MenuItem> CurrentOrder = new List<MenuItem>();

    List<MenuItem> MenuItems = new List<MenuItem>();

    public void AddToOrder(MenuItem item)
    {
        CurrentOrder.Add(item);

        OrderTotal = 0;
        @foreach(var orderItem in CurrentOrder)
        {
            OrderTotal += orderItem.Price;
        }
    }

    protected override Task OnInitializedAsync()
    {
        MenuItems.AddRange(new List<MenuItem>() {
        new MenuItem()
        {
            Id = 1,
            Name = "Frosted Pumpkin Bread",
            Slug = "pumpkin-bread",
            Summary = "A seasonal delight we offer every autumn.  Pumpking bread with just a bit of spice, cream cheese frosting with just a hint of home.",
            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus.",
            ImageFile = "images/menu/pumpkinbread.png",
            Price = 5
        },
        new MenuItem()
        {
            Id = 2,
            Name = "Ground to Go",
            Slug = "ground-coffee",
            Summary = "Love our coffee? Take it with you so you never have to be without!",
            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus.",
            ImageFile = "images/menu/ground.png",
            Price = 5
        },
        new MenuItem()
        {
            Id = 3,
            Name = "Granola with Nuts",
            Summary = "It's not flashy, but it sure is healthy.  Perfect for when you need the calories, but not the guilt.",
            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus.",
            ImageFile = "images/menu/granola.png",
            Price = 5
        },
        new MenuItem()
        {
            Id = 4,
            Name = "Bean there, done that!",
            Summary = "Do you prefer to grind your own coffee? No problem, we'll give you the beans.",
            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus.",
            ImageFile = "images/menu/beans.jpg",
            Price = 5
        },
        new MenuItem()
        {
            Id = 5,
            Name = "Fresh Bagels",
            Summary = "They're just as round as donuts, but far more healthy! Freshly made every morning before sunrise.",
            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus.",
            ImageFile = "images/menu/bagel.png",
            Price = 5
        },
        new MenuItem()
        {
            Id = 6,
            Name = "Fresh Fruit",
            Summary = "We've got strawberries, blueberries, apples, bananas - we could list them all, but we'd prefer you come take a look!",
            Description = "Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus. Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ut, tenetur natus doloremque laborum quos iste ipsum rerum obcaecati impedit odit illo dolorum ab tempora nihil dicta earum fugiat. Temporibus, voluptatibus.",
            ImageFile = "images/menu/strawberries.png",
            Price = 5
        } });


        return base.OnInitializedAsync();
    }

}
